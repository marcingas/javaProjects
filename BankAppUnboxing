import java.util.ArrayList;

record Customer(String name, ArrayList<Double>transactions){
    public Customer(String name, double initialTransaction){
        this(name.toUpperCase(),
        new ArrayList<>(500));
        transactions.add(initialTransaction);
    }
}

public class Challenge {
    public static void main(String[] args) {


        Customer bob = new Customer("Bob Shreder", 5000);
        System.out.println(bob);
        Bank bank= new Bank("Mbank");
        bank.addNewCustomer("Marianna Giorg",5000);
        System.out.println("adding new customer nr 2: ");
        bank.addNewCustomer("Marianna Giorg", 5000);
        System.out.println("adding new customer nr 3: ");
        bank.addNewCustomer("Joanna Giorgina", 6000);
        System.out.println(bank);
        bank.addTransaction("Marianna Giorg",-10.25);
        bank.addTransaction("Marianna Giorg",-75.01);
        bank.printStatement("Marianna Giorg");
        bank.printStatement("Marianna Giorgiewska");



    }

}

    
class Bank {
    @Override
    public String toString() {
        return "Bank{" +
                "name='" + name + '\'' +
                ", customers=" + customers +
                '}';
    }

    private String name;
    ArrayList<Customer> customers = new ArrayList<>(5000);

    public Bank(String name) {
        this.name = name;
    }

    private Customer getCustomer(String customerName) {
        for (var customer : customers) {
            if (customer.name().equalsIgnoreCase(customerName)) {
                System.out.printf("Customer %s already exist %n", customerName);
                return customer;
            }

        }
        System.out.printf("Customer (%s) wasn't found %n ", customerName);
return null;
    }

    public void addNewCustomer(String customerName, double initialDeposit) {
        if (getCustomer(customerName) == null) {
            Customer customer = new Customer(customerName, initialDeposit);
            customers.add(customer);
            System.out.println("New Customer added: " + customer);
        }
    }
    public void addTransaction(String name, double transactionAmmount){
      Customer customer = getCustomer(name);
      if(customer != null){
          customer.transactions().add(transactionAmmount);
      }

}
    public void printStatement(String customerName){
        Customer customer = getCustomer(customerName);
        if(customer == null){
            System.out.println("there is no such Customer");
            return;
        }
        System.out.println("-".repeat(30));
        System.out.println("Customer name: " + customerName);
        System.out.println("Transactions: ");
        for(double d : customer.transactions()){
            System.out.printf("$%10.2f (%s)%n", d, d< 0 ? "debit": "credit");
        }
    }

}
